"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}});const y=Math.PI,L=y*2,ee="CLOSE";let v,T,p,n,e;exports.frame=0;exports.looping=!1;const te=(t,a,i)=>(p=document.createElement("canvas"),n=p.getContext("2d"),document.body.prepend(p),p.setAttribute("id",i||"canvas"),e=window.devicePixelRatio,t?(v=t,T=a||v,p.setAttribute("style",`width:${v}px;height:${T}px;`),p.setAttribute("width",(v*e).toString()),p.setAttribute("height",(T*e).toString())):(p.setAttribute("style","width:100%;height:100%;"),{width:v,height:T}=p.getBoundingClientRect(),p.setAttribute("width",(v*e).toString()),p.setAttribute("height",(T*e).toString())),n.fillStyle="white",n.strokeStyle="black",n.lineCap="round",n.lineJoin="round",n.imageSmoothingEnabled=!0,{width:v,height:T,ctx:n,canvas:p}),ae=t=>t===void 0?window.devicePixelRatio:(e=t,p.width=v*e,p.height=T*e,t);let b=!1;const B=t=>{t==="CLOSE"&&n.closePath(),b?(b=!1,R()):n.beginPath()},J=(t,a)=>{b?n.lineTo(t*e,a*e):(b=!0,n.moveTo(t*e,a*e))},U=(t,a,i,r,s)=>{n.arcTo(t*e,a*e,i*e,r*e,s*e)},j=(t,a,i,r,s,l)=>{s&&l?n.bezierCurveTo(t*e,a*e,i*e,r*e,s*e,l*e):n.quadraticCurveTo(t*e,a*e,i*e,r*e)},ie=(t,a,i,r)=>{n.beginPath(),n.moveTo(t*e,a*e),n.lineTo(i*e,r*e),R()},W=(t,a,i=10,r,s)=>{n.beginPath(),n.arc(t*e,a*e,i*e,r||0,s||L),R()},H=(t,a,i=15,r=10,s=0,l,o,u)=>{n.beginPath(),n.ellipse(t*e,a*e,i*e,r*e,s*e,l||0,o||L,u),R()},K=(t,a,i=20,r=20,s)=>{n.beginPath(),s?(n.moveTo((t+s)*e,a*e),n.arcTo((t+i)*e,a*e,(t+i)*e,(a+r)*e,s*e),n.arcTo((t+i)*e,(a+r)*e,t*e,(a+r)*e,s*e),n.arcTo(t*e,(a+r)*e,t*e,a*e,s*e),n.arcTo(t*e,a*e,(t+i)*e,a*e,s*e)):n.rect(t*e,a*e,i*e,r*e),R()};let d;const re=t=>{t==="CLOSE"?(n.clip(d),exports.shape=B,exports.vertex=J,exports.arc=U,exports.curve=j,exports.circle=W,exports.ellipse=H,exports.rect=K):(n.save(),d=new Path2D,exports.shape=ne,exports.vertex=ce,exports.arc=oe,exports.curve=le,exports.circle=fe,exports.ellipse=me,exports.rect=de)},se=()=>n.restore(),ne=t=>{b&&(b=!1),t==="CLOSE"&&(b=!1,d.closePath())},ce=(t,a)=>{b?d.lineTo(t*e,a*e):(b=!0,d.moveTo(t*e,a*e))},oe=(t,a,i,r,s)=>{d.arcTo(t*e,a*e,i*e,r*e,s*e)},le=(t,a,i,r,s,l)=>{s&&l?d.bezierCurveTo(t*e,a*e,i*e,r*e,s*e,l*e):d.quadraticCurveTo(t*e,a*e,i*e,r*e)},fe=(t,a,i=10,r,s)=>{d.arc(t*e,a*e,i*e,r||0,s||L)},me=(t,a,i=15,r=10,s=0,l,o,u)=>{d.ellipse(t*e,a*e,i*e,r*e,s*e,l||0,o||L,u)},de=(t,a,i=20,r=20,s)=>{s?(d.moveTo((t+s)*e,a*e),d.arcTo((t+i)*e,a*e,(t+i)*e,(a+r)*e,s*e),d.arcTo((t+i)*e,(a+r)*e,t*e,(a+r)*e,s*e),d.arcTo(t*e,(a+r)*e,t*e,a*e,s*e),d.arcTo(t*e,a*e,(t+i)*e,a*e,s*e)):d.rect(t*e,a*e,i*e,r*e)};let G="sans-serif";const ue=(t,a,i)=>{let r="",s=i||"",l=G;if(a&&(G=l=a),typeof t=="number"&&(r=t*e+"px"),typeof t=="string"){const o=t.match(/^(\d+)([a-z%]*)\/?(\d*)([a-z%]*)$/);o&&(r=parseFloat(o[1])*e+(o[2]?o[2]:"px"),o[3]&&(r+=`/${o[3]}`,r+=o[4]?o[4]:"px"))}n.font=`${s} ${r} ${l}`.trim()};let Q;const pe=(t,a,i)=>{n.textAlign=t,a&&(n.textBaseline=a),i&&(Q=i)},ge=(t,a,i,r)=>{let s=r||Q;s=s!==void 0?s*e:s,n.fillText(`${t}`,a*e,i*e,s),n.strokeText(`${t}`,a*e,i*e,s)},V="LINEAR",X="CONIC",Y="RADIAL",he=(t,...a)=>{const i={};return t===V?i.reset=(r,s,l,o)=>{const u=r||a[0],g=s||a[1],S=l||a[2],k=o||a[3];i.image=n.createLinearGradient(u*e,g*e,S*e,k*e)}:t===X?i.reset=(r,s,l)=>{const o=r||a[0],u=s||a[1],g=l||a[2];i.image=n.createConicGradient(o*e,u*e,g*e)}:t===Y&&(i.reset=(r,s,l,o,u,g)=>{const S=r||a[0],k=s||a[1],I=l||a[2],c=o||a[3],x=u||a[4],F=g||a[5];i.image=n.createRadialGradient(S*e,k*e,I*e,c*e,x*e,F*e)}),i.reset(),i.add=(r,s)=>i.image.addColorStop(r,s),i},R=()=>{n.fill(),n.stroke()},q=t=>{t===null?n.fillStyle="transparent":n.fillStyle=t},w=(t,a,i,r)=>{t===null?n.strokeStyle="transparent":n.strokeStyle=t,a!==void 0&&(n.lineWidth=a*e),i!==void 0&&(n.lineCap=i),r!==void 0&&(n.lineJoin=r)},ve=(t=0,a=0,i=v,r=T)=>{n.clearRect(t*e,a*e,i*e,r*e)},Ae=t=>{const{fillStyle:a,strokeStyle:i}=n;w(null),q(t),exports.rect(0,0,v,T),w(i),q(a)};let N;const Te=()=>{exports.looping=!1,cancelAnimationFrame(N)},be=t=>{exports.looping=!0;const a=i=>{exports.frame++,t(i),exports.looping&&(N=requestAnimationFrame(a))};N=requestAnimationFrame(a)},ke={linear:t=>t,cubicIn:t=>t*t*t,cubicOut:t=>1-(1-t)*(1-t)*(1-t),cubicInOut:t=>t<.5?4*t*t*t:1-(-2*t+2)*(-2*t+2)*(-2*t+2)/2},Ce={dur:1e3,loop:!1,ease:"linear"},Se=({dur:t=1e3,loop:a=!1,ease:i="linear",onstart:r,ontick:s,onpause:l,onend:o}=Ce)=>{let u=()=>{},g,S,k,I=!1;const c={dur:t,ease:i,loop:a,started:!1,paused:!1,ended:!1,frame:0,time:0,t:0,onstart:r,ontick:s,onpause:l,onend:o};c.pause=()=>{!g||(c.paused=!0,c.onpause&&c.onpause(),clearTimeout(S),cancelAnimationFrame(g))},c.play=()=>{c.started&&!c.paused&&!c.ended||(c.ended&&F(),c.paused=!1,I=!0,x())},c.on=(_,E)=>{if(!(c.started&&!c.ended)){if(_ instanceof Array)if(E instanceof Array){const h=E.map(m=>Object.keys(m)),C=_.map((m,f)=>h[f].map(A=>m[A])),P=E.map((m,f)=>h[f].map((A,O)=>m[A]-C[f][O]));u=()=>_.forEach((m,f)=>h[f].forEach((A,O)=>{m[A]=C[f][O]+c.t*P[f][O]}))}else{const h=Object.keys(E),C=_.map(m=>h.map(f=>m[f])),P=C.map(m=>h.map((f,A)=>E[f]-m[A]));u=()=>_.forEach((m,f)=>h.forEach((A,O)=>{m[A]=C[f][O]+c.t*P[f][O]}))}else{const h=Object.keys(E),C=h.map(m=>_[m]),P=h.map((m,f)=>E[m]-C[f]);u=()=>h.forEach((m,f)=>{_[m]=C[f]+c.t*P[f]})}F(),x()}};const x=()=>{g=requestAnimationFrame(a?M:z)},F=()=>{c.frame=0,c.time=0,c.t=0,c.started=!1,c.ended=!1},$=()=>{c.t=ke[i](c.time/c.dur),u(),s&&s(),c.ended&&o&&o(),c.frame++},Z=()=>{c.time=c.dur,c.ended=!0,$(),cancelAnimationFrame(g)},D=()=>{c.started||(c.started=!0,r&&r(),k=performance.now()),I&&(I=!1,k=performance.now()-c.time),c.time=Math.min(performance.now()-k,c.dur)},M=()=>{D(),c.time===c.dur&&(c.time=0,k=performance.now()),$(),!c.paused&&(g=requestAnimationFrame(M))},z=()=>{clearTimeout(S),D(),c.time===c.dur&&(c.ended=!0),$(),!c.ended&&!c.paused&&(S=setTimeout(Z,c.dur-c.time),g=requestAnimationFrame(z))};return c};exports.shape=B;exports.vertex=J;exports.arc=U;exports.curve=j;exports.circle=W;exports.ellipse=H;exports.rect=K;exports.CLOSE=ee;exports.CONIC=X;exports.LINEAR=V;exports.PI=y;exports.RADIAL=Y;exports.TAU=L;exports.animate=Se;exports.bg=Ae;exports.clear=ve;exports.clip=se;exports.fill=q;exports.font=ue;exports.getcanvas=te;exports.gradient=he;exports.line=ie;exports.loop=be;exports.mask=re;exports.pxratio=ae;exports.settext=pe;exports.stop=Te;exports.stroke=w;exports.text=ge;
