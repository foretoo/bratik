const e=Math.PI,t=2*e,a="CLOSE",i={linear:e=>e,cubicIn:e=>e*e*e,cubicOut:e=>1-(1-e)*(1-e)*(1-e),cubicInOut:e=>e<.5?4*e*e*e:1-(-2*e+2)*(-2*e+2)*(-2*e+2)/2},n={dur:1e3,loop:!1,ease:"linear"},o=({dur:e=1e3,loop:t=!1,ease:a="linear",onstart:o,ontick:r,onpause:s,onend:c}=n)=>{let l,d,m,u=()=>{},p=!1;const h={dur:e,ease:a,loop:t,started:!1,paused:!1,ended:!1,frame:0,time:0,t:0,onstart:o,ontick:r,onpause:s,onend:c,pause:()=>{l&&(h.paused=!0,h.onpause&&h.onpause(),clearTimeout(d),cancelAnimationFrame(l))},play:()=>{(!h.started||h.paused||h.ended)&&(h.ended&&f(),h.paused=!1,p=!0,g())},on:(e,t)=>{if(!h.started||h.ended){if(e instanceof Array)if(t instanceof Array){const a=t.map((e=>Object.keys(e))),i=e.map(((e,t)=>a[t].map((t=>e[t])))),n=t.map(((e,t)=>a[t].map(((a,n)=>e[a]-i[t][n]))));u=()=>e.forEach(((e,t)=>a[t].forEach(((a,o)=>{e[a]=i[t][o]+h.t*n[t][o]}))))}else{const a=Object.keys(t),i=e.map((e=>a.map((t=>e[t])))),n=i.map((e=>a.map(((a,i)=>t[a]-e[i]))));u=()=>e.forEach(((e,t)=>a.forEach(((a,o)=>{e[a]=i[t][o]+h.t*n[t][o]}))))}else{const a=Object.keys(t),i=a.map((t=>e[t])),n=a.map(((e,a)=>t[e]-i[a]));u=()=>a.forEach(((t,a)=>{e[t]=i[a]+h.t*n[a]}))}f(),g()}}},g=()=>{l=t?requestAnimationFrame(v):requestAnimationFrame(C)},f=()=>{h.frame=0,h.time=0,h.t=0,h.started=!1,h.ended=!1},A=()=>{h.t=i[a](h.time/h.dur),u(),r&&r(),h.ended&&c&&c(),h.frame++},T=()=>{h.time=h.dur,h.ended=!0,A(),cancelAnimationFrame(l)},b=()=>{h.started||(h.started=!0,o&&o(),m=performance.now()),p&&(p=!1,m=performance.now()-h.time),h.time=Math.min(performance.now()-m,h.dur)},v=()=>{b(),h.time===h.dur&&(h.time=0,m=performance.now()),A(),!h.paused&&(l=requestAnimationFrame(v))},C=()=>{clearTimeout(d),b(),h.time===h.dur&&(h.ended=!0),A(),h.ended||h.paused||(d=setTimeout(T,h.dur-h.time),l=requestAnimationFrame(C))};return h};let r,s,c,l,d,m=0,u=!1;const p=(e,t,a)=>(c=document.createElement("canvas"),l=c.getContext("2d"),document.body.prepend(c),c.setAttribute("id",a||"canvas"),d=window.devicePixelRatio,e?(r=e,s=t||r,c.setAttribute("style",`width:${r}px;height:${s}px;`),c.setAttribute("width",(r*d).toString()),c.setAttribute("height",(s*d).toString())):(c.setAttribute("style","width:100%;height:100%;"),({width:r,height:s}=c.getBoundingClientRect()),c.setAttribute("width",(r*d).toString()),c.setAttribute("height",(s*d).toString())),l.fillStyle="white",l.strokeStyle="black",l.lineCap="round",l.lineJoin="round",l.imageSmoothingEnabled=!0,{width:r,height:s,ctx:l,canvas:c}),h=e=>void 0===e?window.devicePixelRatio:(d=e,c.width=r*d,c.height=s*d,e);let g=!1;const f=e=>{"CLOSE"===e&&l.closePath(),g?(g=!1,M()):l.beginPath()},A=(e,t)=>{g?l.lineTo(e*d,t*d):(g=!0,l.moveTo(e*d,t*d))},T=(e,t,a,i,n)=>{l.arcTo(e*d,t*d,a*d,i*d,n*d)},b=(e,t,a,i,n,o)=>{n&&o?l.bezierCurveTo(e*d,t*d,a*d,i*d,n*d,o*d):l.quadraticCurveTo(e*d,t*d,a*d,i*d)},v=(e,t,a,i)=>{l.beginPath(),l.moveTo(e*d,t*d),l.lineTo(a*d,i*d),M()},C=(e,a,i=10,n,o)=>{l.beginPath(),l.arc(e*d,a*d,i*d,n||0,o||t),M()},x=(e,a,i=15,n=10,o=0,r,s,c)=>{l.beginPath(),l.ellipse(e*d,a*d,i*d,n*d,o,r||0,s||t,c),M()},w=(e,t,a=20,i=20,n)=>{l.beginPath(),n?(l.moveTo((e+n)*d,t*d),l.arcTo((e+a)*d,t*d,(e+a)*d,(t+i)*d,n*d),l.arcTo((e+a)*d,(t+i)*d,e*d,(t+i)*d,n*d),l.arcTo(e*d,(t+i)*d,e*d,t*d,n*d),l.arcTo(e*d,t*d,(e+a)*d,t*d,n*d)):l.rect(e*d,t*d,a*d,i*d),M()};let y;const S=e=>{"CLOSE"===e?(l.clip(y),Y=f,Z=A,_=T,ee=b,te=C,ae=x,ie=w):(l.save(),y=new Path2D,Y=k,Z=I,_=O,ee=L,te=P,ae=R,ie=F)},E=()=>l.restore(),k=e=>{g&&(g=!1),"CLOSE"===e&&(g=!1,y.closePath())},I=(e,t)=>{g?y.lineTo(e*d,t*d):(g=!0,y.moveTo(e*d,t*d))},O=(e,t,a,i,n)=>{y.arcTo(e*d,t*d,a*d,i*d,n*d)},L=(e,t,a,i,n,o)=>{n&&o?y.bezierCurveTo(e*d,t*d,a*d,i*d,n*d,o*d):y.quadraticCurveTo(e*d,t*d,a*d,i*d)},P=(e,a,i=10,n,o)=>{y.arc(e*d,a*d,i*d,n||0,o||t)},R=(e,a,i=15,n=10,o=0,r,s,c)=>{y.ellipse(e*d,a*d,i*d,n*d,o*d,r||0,s||t,c)},F=(e,t,a=20,i=20,n)=>{n?(y.moveTo((e+n)*d,t*d),y.arcTo((e+a)*d,t*d,(e+a)*d,(t+i)*d,n*d),y.arcTo((e+a)*d,(t+i)*d,e*d,(t+i)*d,n*d),y.arcTo(e*d,(t+i)*d,e*d,t*d,n*d),y.arcTo(e*d,t*d,(e+a)*d,t*d,n*d)):y.rect(e*d,t*d,a*d,i*d)};let $="sans-serif";const q=(e,t,a)=>{let i="",n=a||"",o=$;if(t&&($=o=t),"number"==typeof e&&(i=e*d+"px"),"string"==typeof e){const t=e.match(/^(\d+)([a-z%]*)\/?(\d*)([a-z%]*)$/);t&&(i=parseFloat(t[1])*d+(t[2]?t[2]:"px"),t[3]&&(i+=`/${t[3]}`,i+=t[4]?t[4]:"px"))}l.font=`${n} ${i} ${o}`.trim()};let N;const z=(e,t,a)=>{l.textAlign=e,t&&(l.textBaseline=t),a&&(N=a)},D=(e,t,a,i)=>{let n=i||N;n=void 0!==n?n*d:n,l.fillText(`${e}`,t*d,a*d,n),l.strokeText(`${e}`,t*d,a*d,n)},j="LINEAR",G="CONIC",B="RADIAL",J=(e,...t)=>{const a={};return"LINEAR"===e?a.reset=(e,i,n,o)=>{const r=e||t[0],s=i||t[1],c=n||t[2],m=o||t[3];a.image=l.createLinearGradient(r*d,s*d,c*d,m*d)}:"CONIC"===e?a.reset=(e,i,n)=>{const o=e||t[0],r=i||t[1],s=n||t[2];a.image=l.createConicGradient(o*d,r*d,s*d)}:"RADIAL"===e&&(a.reset=(e,i,n,o,r,s)=>{const c=e||t[0],m=i||t[1],u=n||t[2],p=o||t[3],h=r||t[4],g=s||t[5];a.image=l.createRadialGradient(c*d,m*d,u*d,p*d,h*d,g*d)}),a.reset(),a.add=(e,t)=>a.image.addColorStop(e,t),a},M=()=>{l.fill(),l.stroke()},U=e=>{l.fillStyle=null===e?"transparent":e},W=(e,t,a,i)=>{l.strokeStyle=null===e?"transparent":e,void 0!==t&&(l.lineWidth=t*d),void 0!==a&&(l.lineCap=a),void 0!==i&&(l.lineJoin=i)},H=(e=0,t=0,a=r,i=s)=>{l.clearRect(e*d,t*d,a*d,i*d)},K=e=>{const{fillStyle:t,strokeStyle:a}=l;W(null),U(e),ie(0,0,r,s),W(a),U(t)};let Q;const V=()=>{u=!1,cancelAnimationFrame(Q)},X=e=>{u=!0;const t=a=>{m++,e(a),u&&(Q=requestAnimationFrame(t))};Q=requestAnimationFrame(t)};let Y=f,Z=A,_=T,ee=b,te=C,ae=x,ie=w;export{a as CLOSE,G as CONIC,j as LINEAR,e as PI,B as RADIAL,t as TAU,o as animate,_ as arc,K as bg,te as circle,H as clear,E as clip,ee as curve,ae as ellipse,U as fill,q as font,m as frame,p as getcanvas,J as gradient,v as line,X as loop,u as looping,S as mask,h as pxratio,ie as rect,z as settext,Y as shape,V as stop,W as stroke,D as text,Z as vertex};
